name: Integration

on:
  push:
    branches: [ "main" ]
  pull_request:
      branches: [ "main" ]

jobs:
  Build-as-library:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false

      matrix:
        os: [ ubuntu-latest ]
        build_type: [ Release ]
        c_compiler: [ gcc, clang, cl ]
        include:
          - os: ubuntu-latest
            c_compiler: gcc
            cpp_compiler: g++
          - os: ubuntu-latest
            c_compiler: clang
            cpp_compiler: clang++
        exclude:
          - os: ubuntu-latest
            c_compiler: cl

    steps:
      - uses: actions/checkout@v4

      - name: Set reusable strings
        id: strings
        shell: bash
        run: |
          echo "ci=${{ github.workspace }}/ci/integration" >> "$GITHUB_OUTPUT"
          echo "build=${{ github.workspace }}/ci/integration/cmake-build" >> "$GITHUB_OUTPUT"

      - name: Create directory
        run: mkdir ${{ steps.strings.outputs.build }}

      - name: Load CMake configuration
        working-directory: ${{ steps.strings.outputs.build }}
        run: cmake -B ${{ steps.strings.outputs.build }}
          -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }}
          -DCMAKE_C_COMPILER=${{ matrix.c_compiler }}
          -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
          -S ${{ steps.strings.outputs.ci }}

      - name: Test
        working-directory: ${{ steps.strings.outputs.build }}
        run: | 
          cmake --build ${{ steps.strings.outputs.build }} --target Library_Integration -j 8
          ./Library_Integration

  Presentation:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false

      matrix:
        os: [ ubuntu-latest ]
        build_type: [ Release ]
        c_compiler: [ gcc, clang, cl ]
        include:
          - os: ubuntu-latest
            c_compiler: gcc
            cpp_compiler: g++
          - os: ubuntu-latest
            c_compiler: clang
            cpp_compiler: clang++
        exclude:
          - os: ubuntu-latest
            c_compiler: cl

    steps:
      - uses: actions/checkout@v4

      - name: Set reusable strings
        id: strings
        shell: bash
        run: |
          echo "ci=${{ github.workspace }}/ci/integration" >> "$GITHUB_OUTPUT"
          echo "build=${{ github.workspace }}/ci/integration/cmake-build" >> "$GITHUB_OUTPUT"

      - name: Create directory
        run: mkdir ${{ steps.strings.outputs.build }}

      - name: Load CMake configuration
        working-directory: ${{ steps.strings.outputs.build }}
        run: cmake -B ${{ steps.strings.outputs.build }}
          -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }}
          -DCMAKE_C_COMPILER=${{ matrix.c_compiler }}
          -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
          -S ${{ steps.strings.outputs.ci }}

      - name: Test
        working-directory: ${{ steps.strings.outputs.build }}
        run: |
          cmake --build ${{ steps.strings.outputs.build }} --target Readme_Examples -j 8
          ./Readme_Examples


