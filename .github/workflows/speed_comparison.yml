name: Speed comparison

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Install GTest
        run: sudo apt-get install libgtest-dev

      - name: Install Crypto++
        run: sudo apt-get install libcrypto++-dev libcrypto++-doc libcrypto++-utils

      - name: Set reusable strings
        id: strings
        shell: bash
        run: |
          echo "working_directory=${{ github.workspace }}/test/speed_comparison" >> "$GITHUB_OUTPUT"

      - name: Configure
        run: >
          cmake -B ${{ steps.strings.outputs.working_directory }}/cmake-build-release
          -DCMAKE_CXX_COMPILER=g++
          -DCMAKE_C_COMPILER=gcc
          -DCMAKE_BUILD_TYPE=Release
          -S ${{ github.workspace }}/test/speed_comparison

      - name: Build
        run: cmake --build ${{ steps.strings.outputs.working_directory }}/cmake-build-release --target SpeedComparison -j 8

      - name: Run generated tests
        working-directory: ${{ steps.strings.outputs.working_directory }}/cmake-build-release
        run: ls && ./SpeedComparison --gtest_output=xml:tests.xml --gtest_color=yes

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install python packages
        run: |
          python -m pip install --upgrade pip
          pip install matplotlib numpy

      - name: Run Python script
        working-directory: ${{ steps.strings.outputs.working_directory }}
        run: python plot.py cmake-build-release/tests.xml tests.png

      - name: Upload a picture
        uses: devicons/public-upload-to-imgur@v2.2.2
        id: imgur_step
        with:
          path: ${{ steps.strings.outputs.working_directory }}/tests.png
          client_id: ${{secrets.IMGUR_CLIENT_ID}}

#      - name: Comment on the PR about the result
#        uses: github-actions-up-and-running/pr-comment@v1.0.1
#        env:
#          IMG_URL: ${{ fromJSON(steps.imgur_step.outputs.imgur_urls)[0] }}
#          MESSAGE: |
#                  Latest test results:
#                  ![Image]({0})
#        with:
#          repo-token: ${{ secrets.GITHUB_TOKEN }}
#          message: ${{format(env.MESSAGE, env.IMG_URL)}}

      - name: Update README with image path
        run: |
          sed -i "s|{{ IMAGE_PATH }}|${{ fromJSON(steps.imgur_step.outputs.imgur_urls)[0] }}|g" README.md

